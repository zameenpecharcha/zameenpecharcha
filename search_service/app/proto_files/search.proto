syntax = "proto3";

package search;

// Property Index Message
message PropertyIndex {
    int32 id = 1;
    int32 post_id = 2;
    string property_type = 3;
    string property_subtype = 4;
    float price = 5;
    float area = 6;
    int32 bedrooms = 7;
    int32 bathrooms = 8;
    string location = 9;
    string city = 10;
    string state = 11;
    string country = 12;
    float latitude = 13;
    float longitude = 14;
    repeated string amenities = 15;
    string property_status = 16;
    string created_at = 17;
    string updated_at = 18;
}

// Property List Message
message PropertyList {
    repeated PropertyIndex properties = 1;
}

// Search History Message
message SearchHistory {
    int32 id = 1;
    int32 user_id = 2;
    map<string, string> search_query = 3;
    int32 results_count = 4;
    string created_at = 5;
}

// Search History List Message
message SearchHistoryList {
    repeated SearchHistory search_history = 1;
}

// Index Property Request Message
message IndexPropertyRequest {
    int32 post_id = 1;
    string property_type = 2;
    string property_subtype = 3;
    float price = 4;
    float area = 5;
    int32 bedrooms = 6;
    int32 bathrooms = 7;
    string location = 8;
    string city = 9;
    string state = 10;
    string country = 11;
    float latitude = 12;
    float longitude = 13;
    repeated string amenities = 14;
    string property_status = 15;
}

// Search Properties Request Message
message SearchPropertiesRequest {
    string property_type = 1;
    string property_subtype = 2;
    float min_price = 3;
    float max_price = 4;
    float min_area = 5;
    float max_area = 6;
    int32 bedrooms = 7;
    int32 bathrooms = 8;
    string location = 9;
    string city = 10;
    string state = 11;
    string property_status = 12;
    repeated string amenities = 13;
    string sort_by = 14;
    string sort_order = 15;
    int32 limit = 16;
    int32 offset = 17;
}

// Update Property Index Request Message
message UpdatePropertyIndexRequest {
    int32 post_id = 1;
    float price = 2;
    string property_status = 3;
    repeated string amenities = 4;
}

// Delete Property Index Request Message
message DeletePropertyIndexRequest {
    int32 post_id = 1;
}

// Log Search Request Message
message LogSearchRequest {
    int32 user_id = 1;
    string property_type = 2;
    float min_price = 3;
    float max_price = 4;
    string location = 5;
    int32 results_count = 6;
}

// Get Search History Request Message
message GetSearchHistoryRequest {
    int32 user_id = 1;
    int32 limit = 2;
}

// Property Response Message
message PropertyResponse {
    bool success = 1;
    string message = 2;
    PropertyIndex property_index = 3;
}

// Search Response Message
message SearchResponse {
    bool success = 1;
    string message = 2;
    PropertyList properties = 3;
}

// Delete Response Message
message DeleteResponse {
    bool success = 1;
    string message = 2;
}

// Search History Response Message
message SearchHistoryResponse {
    bool success = 1;
    string message = 2;
    SearchHistory search_history = 3;
}

// Search History List Response Message
message SearchHistoryListResponse {
    bool success = 1;
    string message = 2;
    SearchHistoryList search_history = 3;
}

// Search Service Definition
service SearchService {
    rpc IndexProperty(IndexPropertyRequest) returns (PropertyResponse) {}
    rpc SearchProperties(SearchPropertiesRequest) returns (SearchResponse) {}
    rpc UpdatePropertyIndex(UpdatePropertyIndexRequest) returns (PropertyResponse) {}
    rpc DeletePropertyIndex(DeletePropertyIndexRequest) returns (DeleteResponse) {}
    rpc LogSearch(LogSearchRequest) returns (SearchHistoryResponse) {}
    rpc GetSearchHistory(GetSearchHistoryRequest) returns (SearchHistoryListResponse) {}
} 