# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import user_pb2 as user__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in user_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUser = channel.unary_unary(
                '/user.UserService/GetUser',
                request_serializer=user__pb2.UserRequest.SerializeToString,
                response_deserializer=user__pb2.UserResponse.FromString,
                _registered_method=True)
        self.CreateUser = channel.unary_unary(
                '/user.UserService/CreateUser',
                request_serializer=user__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=user__pb2.UserResponse.FromString,
                _registered_method=True)
        self.CreateRating = channel.unary_unary(
                '/user.UserService/CreateRating',
                request_serializer=user__pb2.CreateRatingRequest.SerializeToString,
                response_deserializer=user__pb2.UserRatingResponse.FromString,
                _registered_method=True)
        self.GetUserRatings = channel.unary_unary(
                '/user.UserService/GetUserRatings',
                request_serializer=user__pb2.UserRequest.SerializeToString,
                response_deserializer=user__pb2.UserRatingsResponse.FromString,
                _registered_method=True)
        self.FollowUser = channel.unary_unary(
                '/user.UserService/FollowUser',
                request_serializer=user__pb2.FollowUserRequest.SerializeToString,
                response_deserializer=user__pb2.FollowUserResponse.FromString,
                _registered_method=True)
        self.GetUserFollowers = channel.unary_unary(
                '/user.UserService/GetUserFollowers',
                request_serializer=user__pb2.UserRequest.SerializeToString,
                response_deserializer=user__pb2.UserFollowersResponse.FromString,
                _registered_method=True)
        self.GetUserFollowing = channel.unary_unary(
                '/user.UserService/GetUserFollowing',
                request_serializer=user__pb2.UserRequest.SerializeToString,
                response_deserializer=user__pb2.UserFollowersResponse.FromString,
                _registered_method=True)
        self.CheckFollowingStatus = channel.unary_unary(
                '/user.UserService/CheckFollowingStatus',
                request_serializer=user__pb2.CheckFollowingRequest.SerializeToString,
                response_deserializer=user__pb2.FollowUserResponse.FromString,
                _registered_method=True)
        self.GetMedia = channel.unary_unary(
                '/user.UserService/GetMedia',
                request_serializer=user__pb2.UserRequest.SerializeToString,
                response_deserializer=user__pb2.MediaResponse.FromString,
                _registered_method=True)
        self.UpdateProfilePhoto = channel.unary_unary(
                '/user.UserService/UpdateProfilePhoto',
                request_serializer=user__pb2.UpdateUserPhotoRequest.SerializeToString,
                response_deserializer=user__pb2.UserResponse.FromString,
                _registered_method=True)
        self.UpdateCoverPhoto = channel.unary_unary(
                '/user.UserService/UpdateCoverPhoto',
                request_serializer=user__pb2.UpdateUserPhotoRequest.SerializeToString,
                response_deserializer=user__pb2.UserResponse.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRating(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserRatings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FollowUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserFollowers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserFollowing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckFollowingStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMedia(self, request, context):
        """Media management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfilePhoto(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCoverPhoto(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=user__pb2.UserRequest.FromString,
                    response_serializer=user__pb2.UserResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=user__pb2.CreateUserRequest.FromString,
                    response_serializer=user__pb2.UserResponse.SerializeToString,
            ),
            'CreateRating': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRating,
                    request_deserializer=user__pb2.CreateRatingRequest.FromString,
                    response_serializer=user__pb2.UserRatingResponse.SerializeToString,
            ),
            'GetUserRatings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserRatings,
                    request_deserializer=user__pb2.UserRequest.FromString,
                    response_serializer=user__pb2.UserRatingsResponse.SerializeToString,
            ),
            'FollowUser': grpc.unary_unary_rpc_method_handler(
                    servicer.FollowUser,
                    request_deserializer=user__pb2.FollowUserRequest.FromString,
                    response_serializer=user__pb2.FollowUserResponse.SerializeToString,
            ),
            'GetUserFollowers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserFollowers,
                    request_deserializer=user__pb2.UserRequest.FromString,
                    response_serializer=user__pb2.UserFollowersResponse.SerializeToString,
            ),
            'GetUserFollowing': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserFollowing,
                    request_deserializer=user__pb2.UserRequest.FromString,
                    response_serializer=user__pb2.UserFollowersResponse.SerializeToString,
            ),
            'CheckFollowingStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckFollowingStatus,
                    request_deserializer=user__pb2.CheckFollowingRequest.FromString,
                    response_serializer=user__pb2.FollowUserResponse.SerializeToString,
            ),
            'GetMedia': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMedia,
                    request_deserializer=user__pb2.UserRequest.FromString,
                    response_serializer=user__pb2.MediaResponse.SerializeToString,
            ),
            'UpdateProfilePhoto': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfilePhoto,
                    request_deserializer=user__pb2.UpdateUserPhotoRequest.FromString,
                    response_serializer=user__pb2.UserResponse.SerializeToString,
            ),
            'UpdateCoverPhoto': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCoverPhoto,
                    request_deserializer=user__pb2.UpdateUserPhotoRequest.FromString,
                    response_serializer=user__pb2.UserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('user.UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/GetUser',
            user__pb2.UserRequest.SerializeToString,
            user__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/CreateUser',
            user__pb2.CreateUserRequest.SerializeToString,
            user__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateRating(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/CreateRating',
            user__pb2.CreateRatingRequest.SerializeToString,
            user__pb2.UserRatingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserRatings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/GetUserRatings',
            user__pb2.UserRequest.SerializeToString,
            user__pb2.UserRatingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FollowUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/FollowUser',
            user__pb2.FollowUserRequest.SerializeToString,
            user__pb2.FollowUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserFollowers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/GetUserFollowers',
            user__pb2.UserRequest.SerializeToString,
            user__pb2.UserFollowersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserFollowing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/GetUserFollowing',
            user__pb2.UserRequest.SerializeToString,
            user__pb2.UserFollowersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckFollowingStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/CheckFollowingStatus',
            user__pb2.CheckFollowingRequest.SerializeToString,
            user__pb2.FollowUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMedia(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/GetMedia',
            user__pb2.UserRequest.SerializeToString,
            user__pb2.MediaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProfilePhoto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/UpdateProfilePhoto',
            user__pb2.UpdateUserPhotoRequest.SerializeToString,
            user__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCoverPhoto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user.UserService/UpdateCoverPhoto',
            user__pb2.UpdateUserPhotoRequest.SerializeToString,
            user__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
